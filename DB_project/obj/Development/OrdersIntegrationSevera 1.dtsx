<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/28/2023 12:12:55 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-KHHRPIL"
  DTS:CreatorName="DESKTOP-KHHRPIL\makso"
  DTS:DTSID="{88950DA6-FD2D-4358-96E7-EF076B496D92}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.948.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="OrdersIntegrationSeveralSources"
  DTS:PackageType="5"
  DTS:VersionBuild="54"
  DTS:VersionGUID="{619845F0-74CC-4B06-AE28-AC61ECE59609}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ErrorLogsConManager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A8846B41-A577-41AA-85EE-EDA9F596B4ED}"
      DTS:ObjectName="ErrorLogsConManager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\my_files\DBProject\ErrorLogs.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="16"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ShipperCompany"
              DTS:DTSID="{6568B4E8-FCE9-46EB-A9FE-7F76F6539576}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderDate"
              DTS:DTSID="{F1B64962-D2DE-4345-8FD6-64FC7286E9B4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EmployeeId"
              DTS:DTSID="{BA2FE58B-DF3A-4726-B8C8-93179BA5E788}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="28"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductName"
              DTS:DTSID="{9EC69A3E-379C-4EFF-987D-9FE29F17C9E6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Quantity"
              DTS:DTSID="{B2C1E2F6-C150-4507-BF2F-CE24E1542852}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="Discount"
              DTS:DTSID="{950FAC63-946F-4496-8242-E9643911870E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="5"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CustomerId"
              DTS:DTSID="{9D2DE03E-4B18-4B7B-AE3F-246BA9E785B1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{175003CF-A967-445E-86CC-32A7E7A693E9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{E77CDB88-8C2D-4C1C-98FA-9FAC31089B4E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorDescription"
              DTS:DTSID="{F0C1FF36-8D5B-449B-97E1-71D410270E70}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost]"
      DTS:CreationName="MSOLAP100"
      DTS:DTSID="{C839113A-C195-4ECF-9FAC-255783A434F1}"
      DTS:ObjectName="localhost">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Data Source=localhost;PROVIDER=MSOLAP;Impersonation Level=Impersonate;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Logs.txt]"
      DTS:CreationName="FILE"
      DTS:DTSID="{39F579E0-5BD6-49E3-927F-6269DDC3093C}"
      DTS:ObjectName="Logs.txt">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\my_files\DBProject\Logs.txt" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="Logs.txt"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="Writes log entries for events to a CSV file"
      DTS:DTSID="{923AC325-7DCC-4E4F-8DFE-98FCE1C9FD20}"
      DTS:ObjectName="SSIS log provider for Text files">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78C8A39C-010B-477B-BFBF-91C59846CA34}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IslandTradingCompanyId">
      <DTS:VariableValue
        DTS:DataType="8">ISLAT</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{48C6563A-CDBF-43BC-9070-D21B785F0A9D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="lastOrderId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D5F128FF-770F-4B10-8921-6E96070610D4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="nrOfInputRows">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,12,OnTaskFailed,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{923AC325-7DCC-4E4F-8DFE-98FCE1C9FD20}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{2df62eb9-5c2a-4c51-b201-0f95d5792771}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{B03711C8-E51B-4737-A12A-206CF7A858D0}"
          SQLTask:SqlStatementSource="SELECT MAX(OrderID) AS lastOrderId&#xA;FROM     Orders"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="lastOrderId"
            SQLTask:DtsVariableName="User::lastOrderId" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\GetOrderDetails"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{B146CB6C-B185-45F1-8EA4-207839CC0DCB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="GetOrderDetails"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\GetOrderDetails\Flat File Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrderDetails\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[ErrorLogsConManager]"
                  connectionManagerRefId="Package.ConnectionManagers[ErrorLogsConManager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Discount]"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Discount]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\GetOrderDetails\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ShipperCompany]"
                      dataType="wstr"
                      length="16"
                      name="ShipperCompany" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[OrderDate]"
                      dataType="dbDate"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[EmployeeId]"
                      dataType="i4"
                      name="EmployeeId" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="28"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Quantity]"
                      dataType="i4"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[CustomerId]"
                      dataType="wstr"
                      length="5"
                      name="CustomerId" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\GetOrderDetails\Island Trading Order Details"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Island Trading Order Details"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrderDetails\Island Trading Order Details.Connections[FlatFileConnection]"
                  connectionManagerID="{89271C07-014A-4D01-8C50-5F1880A66796}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DifOrdersFileConMan]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Quantity]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Quantity]"
                      name="Quantity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Discount]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[Discount]"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Discount]"
                      name="Discount"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                      length="50"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[ShipperCompany]"
                      dataType="wstr"
                      length="50"
                      name="ShipperCompany" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[OrderDate]"
                      dataType="dbDate"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[EmployeeId]"
                      dataType="i4"
                      name="EmployeeId" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="50"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[Quantity]"
                      dataType="i4"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].ExternalColumns[CustomerId]"
                      dataType="wstr"
                      length="50"
                      name="CustomerId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrderDetails\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[Products]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[Products]) [refTable]
where [refTable].[ProductName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductName" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SupplierID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CategoryID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="QuantityPerUnit" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitPrice" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitsInStock" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitsOnOrder" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ReorderLevel" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Discontinued" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrderDetails\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ProductName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[ProductID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ProductID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]"
                      dataType="cy"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]"
                      name="UnitPrice"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">UnitPrice</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrderDetails\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrderDetails\Merge"
              componentClassID="Microsoft.Merge"
              contactInfo="Merge;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple sorted data flows into one sorted data flow. Unlike the Merge Join, all rows flow to the output. For example, combine two sorted lists of customers into a single sorted list. If sorting is not important, use the Union All transformation. "
              name="Merge"
              version="1">
              <inputs>
                <input
                  refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1]"
                  name="Merge Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Quantity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Quantity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Discount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Discount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ProductName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\GetOrderDetails\Merge.Inputs[Merge Input 2]"
                  name="Merge Input 2">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1]"
                  name="Merge Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Quantity]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Quantity]"
                      name="Quantity" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Discount]"
                      dataType="r4"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[Discount]"
                      name="Discount" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ProductName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorCode]"
                      name="ErrorCode" />
                    <outputColumn
                      refId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorColumn]"
                      name="ErrorColumn" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrderDetails\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Order Details]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrderDetails\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      externalMetadataColumnId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      externalMetadataColumnId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      externalMetadataColumnId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrderId]"
                      cachedDataType="i4"
                      cachedName="OrderId"
                      externalMetadataColumnId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      lineageId="Package\GetOrderDetails\Script Component.Outputs[Output 0].Columns[OrderId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      dataType="i4"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      dataType="cy"
                      name="UnitPrice" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      dataType="i2"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrderDetails\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrderDetails\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e4649d5938a348848c1592f350b8391a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7A0309A4-146F-427F-9ACB-79A76A9D3871}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e4649d5938a348848c1592f350b8391a</RootNamespace>
    <AssemblyName>SC_e4649d5938a348848c1592f350b8391a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    int lastOrderIdLocal;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForRead("User::lastOrderId");

        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        lastOrderIdLocal = (int)vars["User::lastOrderId"].Value-Variables.nrOfInputRows;

        vars.Unlock();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForWrite("User::lastOrderId");
        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        vars["User::lastOrderId"].Value = lastOrderIdLocal;

        vars.Unlock();
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.OrderId = ++lastOrderIdLocal;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 Quantity
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool Quantity_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Single Discount
    {
        get
        {
            return Buffer.GetSingle(BufferColumnIndexes[1]);
        }
    }
    public bool Discount_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ProductName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ProductName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ProductID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ProductID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Decimal UnitPrice
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[4]);
        }
    }
    public bool UnitPrice_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 OrderId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool OrderId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Settings.get_Default():SC_e4649d5938a348848c1592f350b8391a.Properties.Sett" +
    "ings")]

namespace SC_e4649d5938a348848c1592f350b8391a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 nrOfInputRows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["nrOfInputRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_e4649d5938a348848c1592f350b8391a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_e4649d5938a348848c1592f350b8391a</msb:DisplayName>
    <msb:ProjectId>{9C1418DE-6FBB-456C-BB37-5F2D90F015E1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_e4649d5938a348848c1592f350b8391a.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e4649d5938a348848c1592f350b8391a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e4649d5938a348848c1592f350b8391a")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e4649d5938a348848c1592f350b8391a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e4649d5938a348848c1592f350b8391a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e4649d5938a348848c1592f350b8391a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAATn12MAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAAOjcA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOg2AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAQBcAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAc
NwAAAAAAAEgAAAACAAUABCMAACwTAAABAAAAAAAAADA2AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBRAAAAAQAAEQIoEAAACgIoEQAACnQdAAABJXIBAABw
bxIAAAoSAG8TAAAKAgZyAQAAcG8UAAAKbxUAAAqlHwAAAQJ7AwAABG8aAAAGWX0BAAAEBm8WAAAK
KgAAABMwAwBFAAAAAQAAEQIoFwAACgIoEQAACnQdAAABJXIBAABwbxgAAAoSAG8TAAAKBnIBAABw
bxQAAAoCewEAAASMHwAAAW8ZAAAKBm8WAAAKKgAAABMwBAAYAAAAAgAAEQMCAnsBAAAEF1gKBn0B
AAAEBm8QAAAGKh4CKBQAAAYqKgIDBAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAA
CipSAnsbAAAKAnscAAAKF5RvHwAACioiAhcoHgAACipSAnsbAAAKAnscAAAKGJRvIAAACioiAhgo
HgAACipSAnsbAAAKAnscAAAKGZRvHQAACioiAhkoHgAACipSAnsbAAAKAnscAAAKGpRvIQAACioi
AhooHgAACio6AhsDjB8AAAEoIgAACipaAywIAhsoIwAACipyJQAAcHMkAAAKeh4CKCUAAAoqHgIo
JgAACip+AignAAAKAgJzGAAABn0CAAAEAgJzGQAABn0DAAAEKpIEcsIAAHAabygAAAosFQIFAgMo
KQAACg4EcwUAAAZvFgAABipKKwcCA28XAAAGA28SAAAGLfEqBio6AigqAAAKAgN9BAAABCo6Aigq
AAAKAgN9BQAABCqWAnsFAAAEbysAAApy0gAAcG8UAAAKKCwAAApvLQAACqUfAAABKh4CKCoAAAoq
rn4GAAAELR5y7gAAcNAHAAACKC4AAApvLwAACnMwAAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAA
BCoafggAAAQqHgIoMQAACioucyAAAAaACAAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkA
AAAABQBsAAAA+AYAACN+AABkBwAAUAgAACNTdHJpbmdzAAAAALQPAABgAQAAI1VTABQRAAAQAAAA
I0dVSUQAAAAkEQAACAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACcAAAAI
AAAACAAAACEAAAAPAAAAMQAAABAAAAACAAAABAAAABAAAAARAAAAAQAAAAUAAAABAAAAAADaAwEA
AAAAAAYAmgL/BQYALgP/BQYA5gHsBQ8AcwYAAAYAEwLgBAYAfQLgBAYAXgLgBAYAFQPgBAYAugLg
BAYA0wLgBAYAKgLgBAYARQJ9AwoA7gImAQ4AKgChBQoAgAUmARIAcQUmAQoAKQUmAQYAvAOYBAoA
ZAcmAQYAJweYBAYAyQHsBQYAkQUfBgYAHQXLBBYAjAHEAxYA+gHEAxYAdAG2BAYArgH/BQ4AEQCh
BQ4AzQWhBQ4AAQChBQYAVgCYBAYA8gSYBAYAmgOYBAYADAWYBE8A5wcAAA4AOwChBQYARwGYBAYA
3gCYBAYAOgjgBAAAAABcAAAAAAABAAEAAQAQAKsEAAAQAAEAAQABABAAZAUAAD0AAgAFAAEAEABG
BwAATQACABQAAQAQAAkHAABRAAQAGAABABAAygYAAFEABQAZAAAAEAAmBoIGUQAGABsAAAEQAPkG
ggZpAAgAHwABAKgDvgAGAAkHwQAGAMoGxQABAFQHyQABAFQHyQARAJ8EzQARAGQB0QARAM4A1QBQ
IAAAAADGAEwDBgABALAgAAAAAMYAVwMGAAEABCEAAAAAxgAXCNkAAQAoIQAAAACGGN8FBgACADAh
AAAAAIYY3wU/AAIAOyEAAAAAhghDCN8ABQBQIQAAAACGCGoEcQAFAFkhAAAAAIYIdAfjAAUAbiEA
AAAAhghWBHEABQB3IQAAAACGCAwB5wAFAIwhAAAAAIYIPwRxAAUAlSEAAAAAhghlAN8ABQCqIQAA
AACGCAIEcQAFALMhAAAAAIYIwADrAAUAyCEAAAAAhggqBHEABQDRIQAAAACGCKgAAQAFAOAhAAAA
AIYIFwTwAAYA9yEAAAAAhgAuCHEABwD/IQAAAACGAC4HcQAHAAciAAAAAIYY3wUGAAcAJyIAAAAA
xgDGB/UABwBMIgAAAADGAb8H2QALAF8iAAAAAMYBFwjZAAwAYSIAAAAAhhjfBf8ADQBwIgAAAACG
GN8F/wAOAH8iAAAAAIYIFQffAA8ApSIAAAAAgxjfBQYADwCtIgAAAACTCI0FBQEPANkiAAAAAJMI
TAEKAQ8A4CIAAAAAkwhYAQ8BDwDoIgAAAACWCDoHFQEQAO8iAAAAAIYY3wUGABAA9yIAAAAAkRjl
BRoBEAAAAAEAMggAAAEAhgUAAAIA1AYAAAMANwUAAAEAdwMAAAEAdwMAAAEAcwAAAAIAHAEAAAMA
hgUAAAQANwUAAAEAhgUAAAEAMggAAAEAagcAAAEAagcAAAEAdwMJAN8FAQARAN8FBgAZAN8FCgAp
AN8FEAAxAN8FEAA5AN8FEABBAN8FEABJAN8FEABRAN8FEABZAN8FEABhAN8FEABpAN8FBgCpAN8F
BgDJAN8FFQDZAN8FBgCZAEwDBgCZAMkFIADhALQAEADhALEGJQBxAIYELADxAGMDMgBxAKEDBgCZ
AFcDBgDhAKEBEADxAG0DNgB5AN8FPwB5AIYFSQB5ANQGTQCBAFMAUQB5AHcEVgCBAAIBWwCBAJcD
YACBALkDZQB5AI8EawB5AH4EAQABAd8FEAB5AC4IcQB5AC4HcQCZAN8FBgAJAQIHdQCZAOgGfQCh
AN8FBgCZAL4GgwCZAAIIiADxANMHjgApAfAAlQApATYIngCxAN8FpADRAN8FBgAuAAsAQgEuABMA
SwEuABsAagEuACMAcwEuACsAnAEuADMAnAEuADsAnAEuAEMAcwEuAEsAogEuAFMAnAEuAFsAuQFD
AGMAAwLjAGsAAwIBAXsAAwLJAXMAagHpAXMAagEbADsAAwABAAYADQAHAA4ACAAQAAAARwgeAQAA
bgQiAQAAeAcmAQAAWgQiAQAAEAEqAQAAQwQiAQAAaQAeAQAABgQiAQAAxAAuAQAALgQiAQAArAAe
AQAAGwQiAQAAGQceAQAAkQUzAQAAbAE4AQAAPgc9AQIABgADAAIABwAFAAIACAAHAAIACQAJAAIA
CgALAAIACwANAAIADAAPAAIADQARAAIADgATAAIADwAVAAEAEAAXAAEAEQAZAAIAGgAbAAIAHAAd
AAIAHQAfAAEAHgAfAAIAHwAhAASAAAABAAAAAAAAAAAAAAAAAHsAAAAEAAAAAAAAAAAAAACsAJ8A
AAAAAA8AAAAAAAAAAAAAALUAgQcAAAAADwAAAAAAAAAAAAAAtQBBBQAAAAAPAAAAAAAAAAAAAAC1
AJ4HAAAAAAQAAAAAAAAAAAAAAKwAmAQAAAAAAAAAAAEAAAAwBgAAAAAASURUU1ZhcmlhYmxlMTAw
AElEVFNWYXJpYWJsZURpc3BlbnNlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JD
b250ZXh0MTAwAEdldEludDMyADxNb2R1bGU+AGdldF9Qcm9kdWN0SUQASW5wdXRJRABTQ19lNDY0
OWQ1OTM4YTM0ODg0OGMxNTkyZjM1MGI4MzkxYQBtc2NvcmxpYgBzZXRfT3JkZXJJZABMb2NrRm9y
UmVhZABnZXRfVW5pdFByaWNlAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBHZXRTaW5nbGUAZ2V0X1Byb2R1Y3ROYW1lAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBMb2NrRm9yV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBnZXRf
VmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5n
AFVubG9jawBsYXN0T3JkZXJJZExvY2FsAEdldERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNDX2U0NjQ5ZDU5MzhhMzQ4ODQ4YzE1OTJmMzUwYjgzOTFhLmRsbABnZXRfUHJvZHVjdElEX0lz
TnVsbABzZXRfT3JkZXJJZF9Jc051bGwAZ2V0X1VuaXRQcmljZV9Jc051bGwAZ2V0X1Byb2R1Y3RO
YW1lX0lzTnVsbABnZXRfRGlzY291bnRfSXNOdWxsAGdldF9RdWFudGl0eV9Jc051bGwAU2V0TnVs
bABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0
TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAGdldF9WYXJpYWJsZURpc3Bl
bnNlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19lNDY0OWQ1OTM4YTM0ODg0OGMxNTkyZjM1
MGI4MzkxYS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0Nf
ZTQ2NDlkNTkzOGEzNDg4NDhjMTU5MmYzNTBiODM5MWEuUHJvcGVydGllcwBHZXRWYXJpYWJsZXMA
Z2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhl
cwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAZ2V0X25yT2ZJbnB1dFJvd3MAT2JqZWN0AEVu
ZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlw
dENvbXBvbmVudABnZXRfRGlzY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVl
V2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRl
eHQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBnZXRfUXVhbnRp
dHkAACNVAHMAZQByADoAOgBsAGEAcwB0AE8AcgBkAGUAcgBJAGQAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAG24AcgBPAGYASQBuAHAA
dQB0AFIAbwB3AHMAAHFTAEMAXwBlADQANgA0ADkAZAA1ADkAMwA4AGEAMwA0ADgAOAA0ADgAYwAx
ADUAOQAyAGYAMwA1ADAAYgA4ADMAOQAxAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAIczRAQsPD1PiP9557cILewABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEE
BwESOQQgABJxBiABARASOQUgARJ5HAMgABwEIAEBHAMHAQgJIAMBEkEdCBJFAwYSQQMGHQgEIAEI
CAQgAQIIBCABDAgEIAEOCAUgARFJCAUgAgEIHAMgAAIHIAICDhGAiQUgAR0ICAQgABI5BQAAEoCN
BiABHBKAkQgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMG
EhgDBhJNAwYSWQMGEl0DBhIgBSABARIMAyAACAMgAAwDIAAOBCAAEUkEIAEBAgkgBAEIDhJBEkUF
IAEBEk0EAAASWQQAABJdBQABARJdBAAAEiADAAABAygACAMoAAIDKAAMAygADgQoABFJBAgAElkE
CAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTQ19lNDY0OWQ1OTM4YTM0ODg0OGMxNTkyZjM1MGI4MzkxYQAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABA3AAAAAAAA
AAAAACo3AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcNwAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AZQA0ADYANAA5AGQANQA5ADMAOABhADMANAA4ADgANAA4AGMAMQA1ADkAMgBmADMANQAw
AGIAOAAzADkAMQBhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBlADQANgA0ADkAZAA1
ADkAMwA4AGEAMwA0ADgAOAA0ADgAYwAxADUAOQAyAGYAMwA1ADAAYgA4ADMAOQAxAGEALgBkAGwA
bAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGUANAA2
ADQAOQBkADUAOQAzADgAYQAzADQAOAA4ADQAOABjADEANQA5ADIAZgAzADUAMABiADgAMwA5ADEA
YQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBlADQANgA0
ADkAZAA1ADkAMwA4AGEAMwA0ADgAOAA0ADgAYwAxADUAOQAyAGYAMwA1ADAAYgA4ADMAOQAxAGEA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADw3AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_e4649d5938a348848c1592f350b8391a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::nrOfInputRows</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F6</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GetOrderDetails\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component.Inputs[Input 0].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component.Inputs[Input 0].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component.Inputs[Input 0].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component.Inputs[Input 0].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component.Inputs[Input 0].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      lineageId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\GetOrderDetails\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Script Component.Outputs[Output 0].Columns[OrderId]"
                      dataType="i4"
                      lineageId="Package\GetOrderDetails\Script Component.Outputs[Output 0].Columns[OrderId]"
                      name="OrderId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrderDetails\Script Component 1"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component 1"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_54a3805fed694db28226dc12ffaa52cc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{662F48AE-9961-4E7D-908B-B624D8774AC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_54a3805fed694db28226dc12ffaa52cc</RootNamespace>
    <AssemblyName>SC_8D8B2BF49E0847B286A9B2BFA3B8CC3B</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Settings.get_Default():SC_54a3805fed694db28226dc12ffaa52cc.Properties.Sett" +
    "ings")]

namespace SC_54a3805fed694db28226dc12ffaa52cc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_54a3805fed694db28226dc12ffaa52cc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_54a3805fed694db28226dc12ffaa52cc</msb:DisplayName>
    <msb:ProjectId>{B8710B0E-B3D7-4FAC-83B8-A971FF9E786D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_54a3805fed694db28226dc12ffaa52cc.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_54a3805fed694db28226dc12ffaa52cc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_54a3805fed694db28226dc12ffaa52cc")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_54a3805fed694db28226dc12ffaa52cc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8D8B2BF49E0847B286A9B2BFA3B8CC3B.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACXb12MAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAdjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
MgAAAAAAAEgAAAACAAUAtCEAALgPAAABAAAAAAAAAGwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bwgAAAYqHgIoDAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKiYC
FwMoGQAACipaAywIAhcoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJz
EAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcp4AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvDgAA
BipKKwcCA28PAAAGA28KAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAigh
AAAKKq5+BQAABC0ecq4AAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCUAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAA4AYAACNTdHJpbmdzAAAAANgMAAAgAQAAI1VTAPgN
AAAQAAAAI0dVSUQAAAAIDgAAsAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAABwAAABgAAAAPAAAAJQAAABAAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAADAD
AQAAAAAABgAqAhYFBgC+AhYFBgB2AQMFDwCKBQAABgCjAeIDBgANAuIDBgDuAeIDBgClAuIDBgBK
AuIDBgBjAuIDBgC6AeIDBgDVAfkCCgB+AsMACgCsBMMADgCdBMMACgBUBMMACgBQBsMABgATBpoD
BgBZAQMFBgC9BDYFBgBIBM0DEgApARoDEgCKARoDEgARAbgDBgA+ARYFFgABAM0EBgD0A5oDBgAT
A5oDBgA3BJoDBgDkAJoDBgCVAJoDBgDVBuIDAAAAACMAAAAAAAEAAQABABAArQMAABAAAQABAAEA
EACQBAAAOQABAAUAAQAQADIGAABFAAEADAABABAABwYAAEkAAwAQAAEAEADIBQAASQAEABEAAAAQ
AD0FmQVJAAUAEgAAARAA9wWZBWEABwAWAAYABwZ/AAYAyAWDAAEAQAaHAAEAQAaHABEAoQOLABEA
AQGPABEAdwCTAFAgAAAAAMYA3AIGAAEAWCAAAAAAxgDnAgYAAQBgIAAAAADGALIGlwABAHkgAAAA
AIYY9gQGAAIAgSAAAAAAhhj2BCUAAgCMIAAAAACGCIcAnQAFAKEgAAAAAIYIWANHAAUAqiAAAAAA
hggOBBAABQC0IAAAAACGCG0DoQAGAMsgAAAAAIYAyQZHAAcA0yAAAAAAhgAaBkcABwDbIAAAAACG
GPYEBgAHAPsgAAAAAMYApQamAAcAICEAAAAAxgGeBpcACwAzIQAAAADGAbIGlwAMADUhAAAAAIYY
9gSwAA0ARCEAAAAAhhj2BLAADgBTIQAAAACDGPYEBgAPAFshAAAAAJMIuQS2AA8AhyEAAAAAkwjp
ALsADwCOIQAAAACTCPUAwAAPAJYhAAAAAJYIJgbGABAAnSEAAAAAhhj2BAYAEAClIQAAAACRGPwE
ywAQAAAAAQDNBgAAAQCyBAAAAgDSBQAAAwBiBAAAAQDzAgAAAQDzAgAAAQBQAAAAAgC5AAAAAwCy
BAAABABiBAAAAQCyBAAAAQDNBgAAAQBWBgAAAQBWBgAAAQDzAgkA9gQBABEA9gQGABkA9gQKACkA
9gQQADEA9gQQADkA9gQQAEEA9gQQAEkA9gQQAFEA9gQQAFkA9gQQAGEA9gQQAGkA9gQGAJkA9gQG
ALkA9gQVAMkA9gQGAIkA3AIGAIkA5wIGAIkAWAAbANEAIwQgAHEA9gQlAHEAsgQvAHEA0gUzAHkA
GgA3AHEAggM8AHEAkQNBAHEAiQMBANkA9gQQAHEAyQZHAHEAGgZHAIkA9gQGAOEAAAZLAIkA5gVS
AJEA9gQGAPEApwBYAPEA0QZfAKEA9gRlAMEA9gQGAC4ACwDqAC4AEwDzAC4AGwASAS4AIwAbAS4A
KwBEAS4AMwBEAS4AOwBEAS4AQwAbAS4ASwBKAS4AUwBEAS4AWwBhAUMAYwCrAakAcwASAckAcwAS
AeEAewCrAeMAawCrAQMAAQAHAAUACAAHAAAAiwDPAAAAXAPTAAAAJgTXAAAAcQPTAAAAvQTbAAAA
CQHgAAAAKgblAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAP
AASAAAABAAAAAAAAAAAAAAAAACwAAAAEAAAAAAAAAAAAAABtAG4AAAAAAA8AAAAAAAAAAAAAAHYA
YAYAAAAADwAAAAAAAAAAAAAAdgB9BgAAAAAEAAAAAAAAAAAAAABtAJoDAAAAAA8AAAAAAAAAAAAA
AHYAbAQAAAAAAAAAAAEAAABHBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAR2V0SW50
MzIAPE1vZHVsZT4AU0NfOEQ4QjJCRjQ5RTA4NDdCMjg2QTlCMkJGQTNCOENDM0IASW5wdXRJRABn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzhEOEIyQkY0OUUw
ODQ3QjI4NkE5QjJCRkEzQjhDQzNCLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ181NGEzODA1ZmVkNjk0ZGIyODIyNmRjMTJmZmFhNTJjYy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNTRhMzgwNWZlZDY5NGRiMjgyMjZk
YzEyZmZhYTUyY2MuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADUANABhADMAOAAwADUAZgBlAGQANgA5ADQAZABi
ADIAOAAyADIANgBkAGMAMQAyAGYAZgBhAGEANQAyAGMAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAsjyTveApRUeAh583nSsIUgAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBSACAQgcAyAAAgYg
AgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYS
GAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAAS
VQUAAQESVQQAABIgAwAAAQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNTRhMzgwNWZlZDY5NGRi
MjgyMjZkYzEyZmZhYTUyY2MAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMMgAAAAAAAAAAAABmMgAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA1ADQAYQAzADgAMAA1AGYAZQBkADYAOQA0AGQAYgAyADgAMgAyADYAZABjADEAMgBm
AGYAYQBhADUAMgBjAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgARAA4AEIAMgBC
AEYANAA5AEUAMAA4ADQANwBCADIAOAA2AEEAOQBCADIAQgBGAEEAMwBCADgAQwBDADMAQgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOABE
ADgAQgAyAEIARgA0ADkARQAwADgANAA3AEIAMgA4ADYAQQA5AEIAMgBCAEYAQQAzAEIAOABDAEMA
MwBCAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUANABh
ADMAOAAwADUAZgBlAGQANgA5ADQAZABiADIAOAAyADIANgBkAGMAMQAyAGYAZgBhAGEANQAyAGMA
YwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAeDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8d8b2bf49e0847b286a9b2bfa3b8cc3b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">06</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GetOrderDetails\Script Component 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrderDetails\Script Component 1.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1].Columns[ErrorCode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrderDetails\Script Component 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\GetOrderDetails\Script Component 1.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrderDetails\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrderDetails\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\GetOrderDetails.Paths[Flat File Source Output]"
              endId="Package\GetOrderDetails\Lookup.Inputs[Lookup Input]"
              name="Flat File Source Output"
              startId="Package\GetOrderDetails\Island Trading Order Details.Outputs[Flat File Source Output]" />
            <path
              refId="Package\GetOrderDetails.Paths[Lookup Error Output]"
              endId="Package\GetOrderDetails\Merge.Inputs[Merge Input 1]"
              name="Lookup Error Output"
              startId="Package\GetOrderDetails\Lookup.Outputs[Lookup Error Output]" />
            <path
              refId="Package\GetOrderDetails.Paths[Lookup Match Output]"
              endId="Package\GetOrderDetails\Script Component.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\GetOrderDetails\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\GetOrderDetails.Paths[Merge Output 1]"
              endId="Package\GetOrderDetails\Script Component 1.Inputs[Input 0]"
              name="Merge Output 1"
              startId="Package\GetOrderDetails\Merge.Outputs[Merge Output 1]" />
            <path
              refId="Package\GetOrderDetails.Paths[Output 0]"
              endId="Package\GetOrderDetails\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\GetOrderDetails\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\GetOrderDetails.Paths[Output 01]"
              endId="Package\GetOrderDetails\Flat File Destination.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\GetOrderDetails\Script Component 1.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\GetOrders"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{53ADE827-650A-41DB-B324-83B8AB6BAD26}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:FailPackageOnFailure="True"
      DTS:LocaleID="-1"
      DTS:ObjectName="GetOrders"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\GetOrders\Flat File Destination 1"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\Flat File Destination 1.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[ErrorLogsConManager]"
                  connectionManagerRefId="Package.ConnectionManagers[ErrorLogsConManager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[ShipperCompany]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ShipperCompany"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ShipperCompany]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ShipperCompany]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[OrderDate]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[OrderDate]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[EmployeeId]"
                      cachedDataType="i4"
                      cachedName="EmployeeId"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[EmployeeId]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[EmployeeId]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerId"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[CustomerId]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[CustomerId]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[ErrorDescription]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ErrorDescription"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      lineageId="Package\GetOrders\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Discount]"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Discount]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ShipperCompany]"
                      dataType="wstr"
                      length="16"
                      name="ShipperCompany" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[OrderDate]"
                      dataType="dbDate"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[EmployeeId]"
                      dataType="i4"
                      name="EmployeeId" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="28"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Quantity]"
                      dataType="i4"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[CustomerId]"
                      dataType="wstr"
                      length="5"
                      name="CustomerId" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      name="ErrorDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\GetOrders\Get shipper"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Get shipper"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[Shippers]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[Shippers]) [refTable]
where [refTable].[CompanyName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ShipperID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CompanyName" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Phone" dataType="DT_WSTR" length="24" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\Get shipper.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrders\Get shipper.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Get shipper.Inputs[Lookup Input].Columns[ShipperCompany]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ShipperCompany"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CompanyName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\GetOrders\Get shipper.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output].Columns[ShipperID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output].Columns[ShipperID]"
                      name="ShipperID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ShipperID</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Get shipper.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\GetOrders\Get shipper.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\GetOrders\Get shipper.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Island Trading Orders"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Island Trading Orders"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\Island Trading Orders.Connections[FlatFileConnection]"
                  connectionManagerID="{89271C07-014A-4D01-8C50-5F1880A66796}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DifOrdersFileConMan]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[ShipperCompany]"
                      length="50"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]"
                      name="ShipperCompany"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[OrderDate]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]"
                      name="OrderDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[EmployeeId]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]"
                      name="EmployeeId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[CustomerId]"
                      length="50"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]"
                      name="CustomerId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                      length="50"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]"
                      name="ProductName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]"
                      name="Quantity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[Discount]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]"
                      name="Discount"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[ShipperCompany]"
                      dataType="wstr"
                      length="50"
                      name="ShipperCompany" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[OrderDate]"
                      dataType="dbDate"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[EmployeeId]"
                      dataType="i4"
                      name="EmployeeId" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                      dataType="wstr"
                      length="50"
                      name="ProductName" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[Quantity]"
                      dataType="i4"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].ExternalColumns[CustomerId]"
                      dataType="wstr"
                      length="50"
                      name="CustomerId" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[Products]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[Products]) [refTable]
where [refTable].[ProductName] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductName" dataType="DT_WSTR" length="40" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SupplierID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CategoryID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="QuantityPerUnit" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitPrice" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitsInStock" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UnitsOnOrder" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ReorderLevel" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Discontinued" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrders\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Lookup.Inputs[Lookup Input].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ProductName</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\GetOrders\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[ProductID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ProductID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]"
                      dataType="cy"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]"
                      name="UnitPrice"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">UnitPrice</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\GetOrders\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\GetOrders\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\GetOrders\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\GetOrders\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\GetOrders\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\GetOrders\Multicast.Outputs[Multicast Output 2]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\GetOrders\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Orders]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderDate]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeId]"
                      cachedDataType="i4"
                      cachedName="EmployeeId"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerId"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrderId]"
                      cachedDataType="i4"
                      cachedName="OrderId"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      lineageId="Package\GetOrders\Script Component.Outputs[Output 0].Columns[OrderId]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ShipperID]"
                      cachedDataType="i4"
                      cachedName="ShipperID"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipVia]"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output].Columns[ShipperID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      dataType="i4"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerID]"
                      dataType="wstr"
                      length="5"
                      name="CustomerID" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                      dataType="i4"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderDate]"
                      dataType="dbTimeStamp"
                      name="OrderDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RequiredDate]"
                      dataType="dbTimeStamp"
                      name="RequiredDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShippedDate]"
                      dataType="dbTimeStamp"
                      name="ShippedDate" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipVia]"
                      dataType="i4"
                      name="ShipVia" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Freight]"
                      dataType="cy"
                      name="Freight" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipName]"
                      dataType="wstr"
                      length="40"
                      name="ShipName" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipAddress]"
                      dataType="wstr"
                      length="60"
                      name="ShipAddress" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipCity]"
                      dataType="wstr"
                      length="15"
                      name="ShipCity" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipRegion]"
                      dataType="wstr"
                      length="15"
                      name="ShipRegion" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipPostalCode]"
                      dataType="wstr"
                      length="10"
                      name="ShipPostalCode" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ShipCountry]"
                      dataType="wstr"
                      length="15"
                      name="ShipCountry" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrders\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\OLE DB Destination 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Order Details]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\GetOrders\OLE DB Destination 1.Connections[OleDbConnection]"
                  connectionManagerID="{B03711C8-E51B-4737-A12A-206CF7A858D0}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DESKTOP-KHHRPIL.Northwind]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]" />
                    <inputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].Columns[OrderId]"
                      cachedDataType="i4"
                      cachedName="OrderId"
                      externalMetadataColumnId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      lineageId="Package\GetOrders\Script Component.Outputs[Output 0].Columns[OrderId]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[OrderID]"
                      dataType="i4"
                      name="OrderID" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                      dataType="i4"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      dataType="cy"
                      name="UnitPrice" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      dataType="i2"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input].ExternalColumns[Discount]"
                      dataType="r4"
                      name="Discount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\OLE DB Destination 1.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\GetOrders\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\OLE DB Destination 1.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Row Count"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::nrOfInputRows</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GetOrders\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\GetOrders\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e4649d5938a348848c1592f350b8391a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7A0309A4-146F-427F-9ACB-79A76A9D3871}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e4649d5938a348848c1592f350b8391a</RootNamespace>
    <AssemblyName>SC_9BFFF01AE0884133AB46E16AA96DBF7E</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    int lastOrderIdLocal;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForRead("User::lastOrderId");

        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        lastOrderIdLocal = (int)vars["User::lastOrderId"].Value-Variables.nrOfInputRows;

        vars.Unlock();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        VariableDispenser variableDispenser = (VariableDispenser)this.VariableDispenser;
        variableDispenser.LockForWrite("User::lastOrderId");
        IDTSVariables100 vars;
        variableDispenser.GetVariables(out vars);

        vars["User::lastOrderId"].Value = lastOrderIdLocal;

        vars.Unlock();
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.OrderId = ++lastOrderIdLocal;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 Quantity
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool Quantity_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Single Discount
    {
        get
        {
            return Buffer.GetSingle(BufferColumnIndexes[1]);
        }
    }
    public bool Discount_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ProductName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ProductName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 ProductID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool ProductID_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Decimal UnitPrice
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[4]);
        }
    }
    public bool UnitPrice_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ShipperCompany
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ShipperCompany_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime OrderDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[6]);
        }
    }
    public bool OrderDate_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 EmployeeId
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool EmployeeId_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String CustomerId
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool CustomerId_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int32 ShipperID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool ShipperID_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int32 OrderId
    {
        set
        {
            this[10] = value;
        }
    }
    public bool OrderId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Settings.get_Default():SC_e4649d5938a348848c1592f350b8391a.Properties.Sett" +
    "ings")]

namespace SC_e4649d5938a348848c1592f350b8391a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 nrOfInputRows
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["nrOfInputRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_e4649d5938a348848c1592f350b8391a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_e4649d5938a348848c1592f350b8391a</msb:DisplayName>
    <msb:ProjectId>{40A817EC-9DF9-435C-AAFF-387A22A536DC}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_e4649d5938a348848c1592f350b8391a.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e4649d5938a348848c1592f350b8391a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e4649d5938a348848c1592f350b8391a")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4649d5938a348848c1592f350b8391a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e4649d5938a348848c1592f350b8391a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e4649d5938a348848c1592f350b8391a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9BFFF01AE0884133AB46E16AA96DBF7E.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEQK2GMAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAxjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHQ5AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACo
OQAAAAAAAEgAAAACAAUAoCMAABwVAAABAAAAAAAAALw4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBRAAAAAQAAEQIoEAAACgIoEQAACnQeAAABJXIBAABw
bxIAAAoSAG8TAAAKAgZyAQAAcG8UAAAKbxUAAAqlIAAAAQJ7AwAABG8kAAAGWX0BAAAEBm8WAAAK
KgAAABMwAwBFAAAAAQAAEQIoFwAACgIoEQAACnQeAAABJXIBAABwbxgAAAoSAG8TAAAKBnIBAABw
bxQAAAoCewEAAASMIAAAAW8ZAAAKBm8WAAAKKgAAABMwBAAYAAAAAgAAEQMCAnsBAAAEF1gKBn0B
AAAEBm8aAAAGKh4CKB4AAAYqKgIDBAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAA
CipSAnsbAAAKAnscAAAKF5RvHwAACioiAhcoHgAACipSAnsbAAAKAnscAAAKGJRvIAAACioiAhgo
HgAACipSAnsbAAAKAnscAAAKGZRvHQAACioiAhkoHgAACipSAnsbAAAKAnscAAAKGpRvIQAACioi
AhooHgAACipSAnsbAAAKAnscAAAKG5RvIAAACioiAhsoHgAACipSAnsbAAAKAnscAAAKHJRvIgAA
CioiAhwoHgAACipSAnsbAAAKAnscAAAKHZRvHQAACioiAh0oHgAACipSAnsbAAAKAnscAAAKHpRv
IAAACioiAh4oHgAACipWAnsbAAAKAnscAAAKHwmUbx0AAAoqJgIfCSgeAAAKKj4CHwoDjCAAAAEo
IwAACipeAywJAh8KKCQAAAoqciUAAHBzJQAACnoeAigmAAAKKh4CKCcAAAoqfgIoKAAACgICcyIA
AAZ9AgAABAICcyMAAAZ9AwAABCqSBHLCAABwGm8pAAAKLBUCBQIDKCoAAAoOBHMFAAAGbyAAAAYq
SisHAgNvIQAABgNvHAAABi3xKgYqOgIoKwAACgIDfQQAAAQqOgIoKwAACgIDfQUAAAQqlgJ7BQAA
BG8sAAAKctIAAHBvFAAACigtAAAKby4AAAqlIAAAASoeAigrAAAKKq5+BgAABC0ecu4AAHDQBwAA
AigvAAAKbzAAAApzMQAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKDIAAAoq
LnMqAAAGgAgAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAACAgAACN+
AAB0CAAAIAkAACNTdHJpbmdzAAAAAJQRAABgAQAAI1VTAPQSAAAQAAAAI0dVSUQAAAAEEwAAGAIA
ACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACgAAAAIAAAACAAAACsAAAAPAAAA
MgAAABAAAAACAAAABAAAABoAAAAbAAAAAQAAAAUAAAABAAAAAAAlBAEAAAAAAAYA5QK6BgYAeQO6
BgYAMQKnBg8ALgcAAAYAXgKbBQYAyAKbBQYAqQKbBQYAYAObBQYABQObBQYAHgObBQYAdQKbBQYA
kALIAwoAOQNbAQ4AKgBcBgoAOwZbARIALAZbAQoA5AVbAQYABwRTBQYAUgFTBQoAHwhbAQYA4gdT
BQYAFAKnBgYATAbaBgYA2AWGBRYA1wEPBBYARQIPBBYAqQFxBQYA+QG6Bg4AEQBcBg4AiAZcBg4A
AQBcBgYAVgBTBQYArQVTBQYA5QNTBQYAxwVTBVMAoggAAA4AOwBcBgYAfAFTBQYACgFTBQYA9Qib
BQAAAABcAAAAAAABAAEAAQAQAGYFAAAQAAEAAQABABAAHwYAAD0AAgAFAAEAEAABCAAAUQACAB4A
AQAQAMQHAABVAAQAIgABABAAhQcAAFUABQAjAAAAEADhBj0HVQAGACUAAAEQALQHPQdtAAgAKQAB
APMDxAAGAMQHxwAGAIUHywABAA8IzwABAA8IzwARAFoF0wARAJkB1wARAPoA2wBQIAAAAADGAJcD
BgABALAgAAAAAMYAogMGAAEABCEAAAAAxgDSCN8AAQAoIQAAAACGGJoGBgACADAhAAAAAIYYmgY/
AAIAOyEAAAAAhggRCeUABQBQIQAAAACGCCUFdwAFAFkhAAAAAIYILwjpAAUAbiEAAAAAhgj3BHcA
BQB3IQAAAACGCDgB7QAFAIwhAAAAAIYIywR3AAUAlSEAAAAAhghzAOUABQCqIQAAAACGCGIEdwAF
ALMhAAAAAIYI7ADxAAUAyCEAAAAAhgi2BHcABQDRIQAAAACGCP4I7QAFAOYhAAAAAIYICwV3AAUA
7yEAAAAAhgjBAfYABQAEIgAAAACGCOIEdwAFAA0iAAAAAIYItgDlAAUAIiIAAAAAhgh3BHcABQAr
IgAAAACGCNEA7QAFAEAiAAAAAIYIoAR3AAUASSIAAAAAhghlAOUABQBfIgAAAACGCE0EdwAFAGki
AAAAAIYIxQABAAUAeSIAAAAAhgiNBPsABgCRIgAAAACGAOkIdwAHAJkiAAAAAIYA6Qd3AAcAoSIA
AAAAhhiaBgYABwDBIgAAAADGAIEIAAEHAOYiAAAAAMYBegjfAAsA+SIAAAAAxgHSCN8ADAD7IgAA
AACGGJoGCgENAAojAAAAAIYYmgYKAQ4AGSMAAAAAhgjQB+UADwA/IwAAAACDGJoGBgAPAEcjAAAA
AJMISAYQAQ8AcyMAAAAAkwiBARUBDwB6IwAAAACTCI0BGgEPAIIjAAAAAJYI9QcgARAAiSMAAAAA
hhiaBgYAEACRIwAAAACRGKAGJQEQAAAAAQDtCAAAAQBBBgAAAgCPBwAAAwDyBQAAAQDCAwAAAQDC
AwAAAQCBAAAAAgBIAQAAAwBBBgAABADyBQAAAQBBBgAAAQDtCAAAAQAlCAAAAQAlCAAAAQDCAwkA
mgYBABEAmgYGABkAmgYKACkAmgYQADEAmgYQADkAmgYQAEEAmgYQAEkAmgYQAFEAmgYQAFkAmgYQ
AGEAmgYQAGkAmgYGALEAmgYGANEAmgYVAOEAmgYGAKEAlwMGAKEAhAYgAOkA4AAQAOkAbAclAHEA
QQUsAPkArgMyAHEA7AMGAKEAogMGAOkA7AEQAPkAuAM2AHkAmgY/AHkAQQZJAHkAjwdNAIEAUwBR
AHkAMgVWAIEALgFbAIEA4gNgAIEABARlAIEAzwFrAHkASgVxAHkAOQUBAAkBmgYQAHkA6Qh3AHkA
6Qd3AKEAmgYGABEBvQd7AKEAoweDAKkAmgYGAKEAeQeJAKEAvQiOAPkAjgiUADEBHAGbADEB8Qik
ALkAmgaqANkAmgYGAC4ACwBSAS4AEwBbAS4AGwB6AS4AIwCDAS4AKwCsAS4AMwCsAS4AOwCsAS4A
QwCDAS4ASwCyAS4AUwCsAS4AWwDJAUMAYwATAuMAawATAgEBewATAgkDcwB6ASkDcwB6ARsAOwAD
AAEABgAXAAcAGAAIABoAAAAVCSkBAAApBS0BAAAzCDEBAAD7BC0BAAA8ATUBAADPBC0BAAB3ACkB
AABmBC0BAADwADkBAAC6BC0BAAACCTUBAAAPBS0BAADFAT4BAADmBC0BAAC6ACkBAAB7BC0BAADV
ADUBAACkBC0BAABpACkBAABRBC0BAADJACkBAACRBC0BAADUBykBAABMBkMBAAChAUgBAAD5B00B
AgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAP
ABUAAgAQABcAAgARABkAAgASABsAAgATAB0AAgAUAB8AAgAVACEAAgAWACMAAgAXACUAAgAYACcA
AgAZACkAAQAaACsAAQAbAC0AAgAkAC8AAgAmADEAAgAnADMAAQAoADMAAgApADUABIAAAAEAAAAA
AAAAAAAAAAAAiQAAAAQAAAAAAAAAAAAAALIArQAAAAAADwAAAAAAAAAAAAAAuwA8CAAAAAAPAAAA
AAAAAAAAAAC7APwFAAAAAA8AAAAAAAAAAAAAALsAWQgAAAAABAAAAAAAAAAAAAAAsgBTBQAAAAAA
AAAAAQAAAOsGAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlRGlzcGVuc2VyMTAwAElE
VFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAR2V0SW50MzIAPE1vZHVsZT4A
Z2V0X1NoaXBwZXJJRABnZXRfUHJvZHVjdElEAElucHV0SUQAU0NfOUJGRkYwMUFFMDg4NDEzM0FC
NDZFMTZBQTk2REJGN0UAbXNjb3JsaWIAZ2V0X0VtcGxveWVlSWQAc2V0X09yZGVySWQAZ2V0X0N1
c3RvbWVySWQATG9ja0ZvclJlYWQAZ2V0X1VuaXRQcmljZQBkZWZhdWx0SW5zdGFuY2UAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAR2V0U2luZ2xlAGdldF9Qcm9kdWN0TmFtZQBJ
bnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UAZ2V0X09yZGVyRGF0ZQBHZXREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAExvY2tGb3JX
cml0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9WYWx1ZQBzZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRTdHJpbmcAVW5sb2NrAGxh
c3RPcmRlcklkTG9jYWwAR2V0RGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOUJGRkYw
MUFFMDg4NDEzM0FCNDZFMTZBQTk2REJGN0UuZGxsAGdldF9TaGlwcGVySURfSXNOdWxsAGdldF9Q
cm9kdWN0SURfSXNOdWxsAGdldF9FbXBsb3llZUlkX0lzTnVsbABzZXRfT3JkZXJJZF9Jc051bGwA
Z2V0X0N1c3RvbWVySWRfSXNOdWxsAGdldF9Vbml0UHJpY2VfSXNOdWxsAGdldF9Qcm9kdWN0TmFt
ZV9Jc051bGwAZ2V0X09yZGVyRGF0ZV9Jc051bGwAZ2V0X0Rpc2NvdW50X0lzTnVsbABnZXRfU2hp
cHBlckNvbXBhbnlfSXNOdWxsAGdldF9RdWFudGl0eV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABJbnB1dDBCdWZmZXIAUGlw
ZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAGdldF9WYXJpYWJsZURpc3BlbnNlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ19lNDY0OWQ1OTM4YTM0ODg0OGMxNTkyZjM1MGI4MzkxYS5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZTQ2NDlkNTkzOGEz
NDg4NDhjMTU5MmYzNTBiODM5MWEuUHJvcGVydGllcwBHZXRWYXJpYWJsZXMAZ2V0X1JlYWRPbmx5
VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBF
cXVhbHMAQ29ubmVjdGlvbnMAZ2V0X25yT2ZJbnB1dFJvd3MAT2JqZWN0AEVuZE9mUm93c2V0AGdl
dF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABn
ZXRfRGlzY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AEdldFZhbHVlV2l0aENvbnRleHQA
U2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQASW5wdXQwX1By
b2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBnZXRfU2hpcHBlckNvbXBhbnkAZ2V0
X1F1YW50aXR5AAAAACNVAHMAZQByADoAOgBsAGEAcwB0AE8AcgBkAGUAcgBJAGQAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAG24AcgBP
AGYASQBuAHAAdQB0AFIAbwB3AHMAAHFTAEMAXwBlADQANgA0ADkAZAA1ADkAMwA4AGEAMwA0ADgA
OAA0ADgAYwAxADUAOQAyAGYAMwA1ADAAYgA4ADMAOQAxAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAALKf1qS55bhPh9ERSeigXwUABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEWUEBwESOQQgABJ1BiABARASOQUgARJ9HAMgABwEIAEBHAMHAQgJIAMBEkEdCBJFAwYS
QQMGHQgEIAEICAQgAQIIBCABDAgEIAEOCAUgARFJCAUgARFNCAUgAgEIHAMgAAIHIAICDhGAjQUg
AR0ICAQgABI5BQAAEoCRBiABHBKAlQgAARKAmRGAnQUgABKAoQcgAgEOEoChCLd6XFYZNOCJCImE
Xc2AgMyRAgYIAwYSFAMGEhgDBhJRAwYSXQMGEmEDBhIgBSABARIMAyAACAMgAAwDIAAOBCAAEUkE
IAARTQQgAQECCSAEAQgOEkESRQUgAQESUQQAABJdBAAAEmEFAAEBEmEEAAASIAMAAAEDKAAIAygA
AgMoAAwDKAAOBCgAEUkEKAARTQQIABJdBAgAEmEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZTQ2NDlkNTkzOGEzNDg4NDhjMTU5MmYz
NTBiODM5MWEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcE
AQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAACcOQAAAAAAAAAAAAC2OQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
qDkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwBlADQANgA0ADkAZAA1ADkAMwA4AGEAMwA0ADgAOAA0ADgAYwAxADUAOQAyAGYAMwA1ADAA
YgA4ADMAOQAxAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkAQgBGAEYARgAwADEA
QQBFADAAOAA4ADQAMQAzADMAQQBCADQANgBFADEANgBBAEEAOQA2AEQAQgBGADcARQAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQBCAEYA
RgBGADAAMQBBAEUAMAA4ADgANAAxADMAMwBBAEIANAA2AEUAMQA2AEEAQQA5ADYARABCAEYANwBF
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGUANAA2ADQA
OQBkADUAOQAzADgAYQAzADQAOAA4ADQAOABjADEANQA5ADIAZgAzADUAMABiADgAMwA5ADEAYQAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAyDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9bfff01ae0884133ab46e16aa96dbf7e</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::nrOfInputRows</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">9D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GetOrders\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[ProductID]"
                      cachedDataType="i4"
                      cachedName="ProductID"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[ProductID]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[UnitPrice]"
                      cachedDataType="cy"
                      cachedName="UnitPrice"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Match Output].Columns[UnitPrice]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[ShipperCompany]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ShipperCompany"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[EmployeeId]"
                      cachedDataType="i4"
                      cachedName="EmployeeId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]" />
                    <inputColumn
                      refId="Package\GetOrders\Script Component.Inputs[Input 0].Columns[ShipperID]"
                      cachedDataType="i4"
                      cachedName="ShipperID"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output].Columns[ShipperID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\GetOrders\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Script Component.Outputs[Output 0].Columns[OrderId]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Script Component.Outputs[Output 0].Columns[OrderId]"
                      name="OrderId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Script Component 1"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component 1"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_54a3805fed694db28226dc12ffaa52cc.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{662F48AE-9961-4E7D-908B-B624D8774AC8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_54a3805fed694db28226dc12ffaa52cc</RootNamespace>
    <AssemblyName>SC_E233577FA5074D3DA7DB78CD155C1F6B</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Settings.get_Default():SC_54a3805fed694db28226dc12ffaa52cc.Properties.Sett" +
    "ings")]

namespace SC_54a3805fed694db28226dc12ffaa52cc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_54a3805fed694db28226dc12ffaa52cc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_54a3805fed694db28226dc12ffaa52cc</msb:DisplayName>
    <msb:ProjectId>{64B0E9D5-5B5D-4324-97BE-CD4AB9918958}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_54a3805fed694db28226dc12ffaa52cc.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_54a3805fed694db28226dc12ffaa52cc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_54a3805fed694db28226dc12ffaa52cc")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_54a3805fed694db28226dc12ffaa52cc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_54a3805fed694db28226dc12ffaa52cc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_E233577FA5074D3DA7DB78CD155C1F6B.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALSP1WMAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAdjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
MgAAAAAAAEgAAAACAAUAtCEAALgPAAABAAAAAAAAAGwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bwgAAAYqHgIoDAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKiYC
FwMoGQAACipaAywIAhcoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJz
EAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcp4AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvDgAA
BipKKwcCA28PAAAGA28KAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAigh
AAAKKq5+BQAABC0ecq4AAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCUAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAA4AYAACNTdHJpbmdzAAAAANgMAAAgAQAAI1VTAPgN
AAAQAAAAI0dVSUQAAAAIDgAAsAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAABwAAABgAAAAPAAAAJQAAABAAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAADAD
AQAAAAAABgAqAhYFBgC+AhYFBgB2AQMFDwCKBQAABgCjAeIDBgANAuIDBgDuAeIDBgClAuIDBgBK
AuIDBgBjAuIDBgC6AeIDBgDVAfkCCgB+AsMACgCsBMMADgCdBMMACgBUBMMACgBQBsMABgATBpoD
BgBZAQMFBgC9BDYFBgBIBM0DEgApARoDEgCKARoDEgARAbgDBgA+ARYFFgABAM0EBgD0A5oDBgAT
A5oDBgA3BJoDBgDkAJoDBgCVAJoDBgDVBuIDAAAAACMAAAAAAAEAAQABABAArQMAABAAAQABAAEA
EACQBAAAOQABAAUAAQAQADIGAABFAAEADAABABAABwYAAEkAAwAQAAEAEADIBQAASQAEABEAAAAQ
AD0FmQVJAAUAEgAAARAA9wWZBWEABwAWAAYABwZ/AAYAyAWDAAEAQAaHAAEAQAaHABEAoQOLABEA
AQGPABEAdwCTAFAgAAAAAMYA3AIGAAEAWCAAAAAAxgDnAgYAAQBgIAAAAADGALIGlwABAHkgAAAA
AIYY9gQGAAIAgSAAAAAAhhj2BCUAAgCMIAAAAACGCIcAnQAFAKEgAAAAAIYIWANHAAUAqiAAAAAA
hggOBBAABQC0IAAAAACGCG0DoQAGAMsgAAAAAIYAyQZHAAcA0yAAAAAAhgAaBkcABwDbIAAAAACG
GPYEBgAHAPsgAAAAAMYApQamAAcAICEAAAAAxgGeBpcACwAzIQAAAADGAbIGlwAMADUhAAAAAIYY
9gSwAA0ARCEAAAAAhhj2BLAADgBTIQAAAACDGPYEBgAPAFshAAAAAJMIuQS2AA8AhyEAAAAAkwjp
ALsADwCOIQAAAACTCPUAwAAPAJYhAAAAAJYIJgbGABAAnSEAAAAAhhj2BAYAEAClIQAAAACRGPwE
ywAQAAAAAQDNBgAAAQCyBAAAAgDSBQAAAwBiBAAAAQDzAgAAAQDzAgAAAQBQAAAAAgC5AAAAAwCy
BAAABABiBAAAAQCyBAAAAQDNBgAAAQBWBgAAAQBWBgAAAQDzAgkA9gQBABEA9gQGABkA9gQKACkA
9gQQADEA9gQQADkA9gQQAEEA9gQQAEkA9gQQAFEA9gQQAFkA9gQQAGEA9gQQAGkA9gQGAJkA9gQG
ALkA9gQVAMkA9gQGAIkA3AIGAIkA5wIGAIkAWAAbANEAIwQgAHEA9gQlAHEAsgQvAHEA0gUzAHkA
GgA3AHEAggM8AHEAkQNBAHEAiQMBANkA9gQQAHEAyQZHAHEAGgZHAIkA9gQGAOEAAAZLAIkA5gVS
AJEA9gQGAPEApwBYAPEA0QZfAKEA9gRlAMEA9gQGAC4ACwDqAC4AEwDzAC4AGwASAS4AIwAbAS4A
KwBEAS4AMwBEAS4AOwBEAS4AQwAbAS4ASwBKAS4AUwBEAS4AWwBhAUMAYwCrAakAcwASAckAcwAS
AeEAewCrAeMAawCrAQMAAQAHAAUACAAHAAAAiwDPAAAAXAPTAAAAJgTXAAAAcQPTAAAAvQTbAAAA
CQHgAAAAKgblAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAP
AASAAAABAAAAAAAAAAAAAAAAACwAAAAEAAAAAAAAAAAAAABtAG4AAAAAAA8AAAAAAAAAAAAAAHYA
YAYAAAAADwAAAAAAAAAAAAAAdgB9BgAAAAAEAAAAAAAAAAAAAABtAJoDAAAAAA8AAAAAAAAAAAAA
AHYAbAQAAAAAAAAAAAEAAABHBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAR2V0SW50
MzIAPE1vZHVsZT4AU0NfRTIzMzU3N0ZBNTA3NEQzREE3REI3OENEMTU1QzFGNkIASW5wdXRJRABn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX0UyMzM1NzdGQTUw
NzREM0RBN0RCNzhDRDE1NUMxRjZCLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1
dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lz
dGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJl
c291cmNlcwBTQ181NGEzODA1ZmVkNjk0ZGIyODIyNmRjMTJmZmFhNTJjYy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNTRhMzgwNWZlZDY5NGRiMjgyMjZk
YzEyZmZhYTUyY2MuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRD
b2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRS
b3cAZ2V0X0Fzc2VtYmx5AAAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEA
bgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAg
AGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEA
ZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfADUANABhADMAOAAwADUAZgBlAGQANgA5ADQAZABi
ADIAOAAyADIANgBkAGMAMQAyAGYAZgBhAGEANQAyAGMAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAALs346ZJZNkecz5dNXsKNtAAEIAEBCAMgAAEFIAEBEREEIAEB
DgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBSACAQgcAyAAAgYg
AgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYS
GAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAAS
VQUAAQESVQQAABIgAwAAAQMoAAgDKAACAygADgQIABJRBAgAElUECAASIAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfNTRhMzgwNWZlZDY5NGRi
MjgyMjZkYzEyZmZhYTUyY2MAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABMMgAAAAAAAAAAAABmMgAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAWDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA1ADQAYQAzADgAMAA1AGYAZQBkADYAOQA0AGQAYgAyADgAMgAyADYAZABjADEAMgBm
AGYAYQBhADUAMgBjAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAEUAMgAzADMANQA3
ADcARgBBADUAMAA3ADQARAAzAEQAQQA3AEQAQgA3ADgAQwBEADEANQA1AEMAMQBGADYAQgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ARQAy
ADMAMwA1ADcANwBGAEEANQAwADcANABEADMARABBADcARABCADcAOABDAEQAMQA1ADUAQwAxAEYA
NgBCAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADUANABh
ADMAOAAwADUAZgBlAGQANgA5ADQAZABiADIAOAAyADIANgBkAGMAMQAyAGYAZgBhAGEANQAyAGMA
YwAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAeDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_e233577fa5074d3da7db78cd155c1f6b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">06</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\GetOrders\Script Component 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Script Component 1.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Script Component 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\GetOrders\Script Component 1.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrders\Script Component 1.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\GetOrders\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\GetOrders\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[ShipperCompany]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ShipperCompany"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ShipperCompany]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[OrderDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[EmployeeId]"
                      cachedDataType="i4"
                      cachedName="EmployeeId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[EmployeeId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[CustomerId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ProductName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Quantity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Discount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 1].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\GetOrders\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[ShipperCompany]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ShipperCompany"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ShipperCompany]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ShipperCompany]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[OrderDate]"
                      cachedDataType="dbDate"
                      cachedName="OrderDate"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[OrderDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[OrderDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[EmployeeId]"
                      cachedDataType="i4"
                      cachedName="EmployeeId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[EmployeeId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[EmployeeId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CustomerId"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[CustomerId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[CustomerId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[ProductName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="ProductName"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[ProductName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ProductName]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[Quantity]"
                      cachedDataType="i4"
                      cachedName="Quantity"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Quantity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Quantity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[Discount]"
                      cachedDataType="r4"
                      cachedName="Discount"
                      lineageId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output].Columns[Discount]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Discount]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\GetOrders\Union All.Inputs[Union All Input 2].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\GetOrders\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\GetOrders\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\GetOrders\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ShipperCompany]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ShipperCompany]"
                      name="ShipperCompany" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[OrderDate]"
                      dataType="dbDate"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[OrderDate]"
                      name="OrderDate" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[EmployeeId]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[EmployeeId]"
                      name="EmployeeId" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[CustomerId]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[CustomerId]"
                      name="CustomerId" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ProductName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ProductName]"
                      name="ProductName" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Quantity]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Quantity]"
                      name="Quantity" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Discount]"
                      dataType="r4"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[Discount]"
                      name="Discount" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorCode]"
                      name="ErrorCode" />
                    <outputColumn
                      refId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\GetOrders\Union All.Outputs[Union All Output 1].Columns[ErrorColumn]"
                      name="ErrorColumn" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\GetOrders.Paths[Flat File Source Output]"
              endId="Package\GetOrders\Row Count.Inputs[Row Count Input 1]"
              name="Flat File Source Output"
              startId="Package\GetOrders\Island Trading Orders.Outputs[Flat File Source Output]" />
            <path
              refId="Package\GetOrders.Paths[Lookup Error Output]"
              endId="Package\GetOrders\Union All.Inputs[Union All Input 1]"
              name="Lookup Error Output"
              startId="Package\GetOrders\Get shipper.Outputs[Lookup Error Output]" />
            <path
              refId="Package\GetOrders.Paths[Lookup Error Output1]"
              endId="Package\GetOrders\Union All.Inputs[Union All Input 2]"
              name="Lookup Error Output"
              startId="Package\GetOrders\Lookup.Outputs[Lookup Error Output]" />
            <path
              refId="Package\GetOrders.Paths[Lookup Match Output]"
              endId="Package\GetOrders\Lookup.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\GetOrders\Get shipper.Outputs[Lookup Match Output]" />
            <path
              refId="Package\GetOrders.Paths[Lookup Match Output1]"
              endId="Package\GetOrders\Script Component.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\GetOrders\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\GetOrders.Paths[Multicast Output 1]"
              endId="Package\GetOrders\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Multicast Output 1"
              startId="Package\GetOrders\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\GetOrders.Paths[Multicast Output 3]"
              endId="Package\GetOrders\OLE DB Destination 1.Inputs[OLE DB Destination Input]"
              name="Multicast Output 3"
              startId="Package\GetOrders\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\GetOrders.Paths[Output 0]"
              endId="Package\GetOrders\Flat File Destination 1.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\GetOrders\Script Component 1.Outputs[Output 0]" />
            <path
              refId="Package\GetOrders.Paths[Output 01]"
              endId="Package\GetOrders\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\GetOrders\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\GetOrders.Paths[Row Count Output 1]"
              endId="Package\GetOrders\Get shipper.Inputs[Lookup Input]"
              name="Row Count Output 1"
              startId="Package\GetOrders\Row Count.Outputs[Row Count Output 1]" />
            <path
              refId="Package\GetOrders.Paths[Union All Output 1]"
              endId="Package\GetOrders\Script Component 1.Inputs[Input 0]"
              name="Union All Output 1"
              startId="Package\GetOrders\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{2911CA5E-C9A3-4734-9630-4FF2B82B9774}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\GetOrders" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\GetOrderDetails"
          TopLeft="241.662949831544,406.348150576427" />
        <NodeLayout
          Size="127.2,41.6"
          Id="Package\GetOrders"
          TopLeft="256.292578879845,254.681482704422" />
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Execute SQL Task"
          TopLeft="244.999990264575,142.533334173626" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="323.64628457221,184.133334173626">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70.5481485307957"
              Start="0,0"
              End="0,63.0481485307957">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.0481485307957" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <ConnectionManager
    design-time-name="Package.ConnectionManagers[localhost]">
    <ProjectReferenceName></ProjectReferenceName>
  </ConnectionManager>
  <TaskHost
    design-time-name="Package\GetOrderDetails">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\GetOrderDetails\Script Component 1"
          TopLeft="480.866673752996,180" />
        <NodeLayout
          Size="216,41.6"
          Id="Package\GetOrderDetails\Lookup"
          TopLeft="213.333330121306,174.100001322428" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\GetOrderDetails\OLE DB Destination"
          TopLeft="195.5,432.7" />
        <NodeLayout
          Size="208,41.6"
          Id="Package\GetOrderDetails\Island Trading Order Details"
          TopLeft="168,68" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\GetOrderDetails\Flat File Destination"
          TopLeft="545.833331015375,286.099999690056" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\GetOrderDetails\Script Component"
          TopLeft="194.5,284.5" />
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Flat File Source Output]"
          TopLeft="272,109.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.3333301213059,64.500001322428"
              Start="0,0"
              End="49.3333301213059,57.000001322428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.250000661214" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.250000661214"
                    Point2="0,32.250000661214"
                    Point3="4,32.250000661214" />
                  <mssgle:LineSegment
                    End="45.3333301213059,32.250000661214" />
                  <mssgle:CubicBezierSegment
                    Point1="45.3333301213059,32.250000661214"
                    Point2="49.3333301213059,32.250000661214"
                    Point3="49.3333301213059,36.250000661214" />
                  <mssgle:LineSegment
                    End="49.3333301213059,57.000001322428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Output 01]"
          TopLeft="566.066673752996,221.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.9666572623792,64.4999996900559"
              Start="0,0"
              End="64.9666572623792,56.9999996900559">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.2499998450279" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.2499998450279"
                    Point2="0,32.2499998450279"
                    Point3="4,32.2499998450279" />
                  <mssgle:LineSegment
                    End="60.9666572623792,32.2499998450279" />
                  <mssgle:CubicBezierSegment
                    Point1="60.9666572623792,32.2499998450279"
                    Point2="64.9666572623792,32.2499998450279"
                    Point3="64.9666572623792,36.2499998450279" />
                  <mssgle:LineSegment
                    End="64.9666572623792,56.9999996900559" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Output 0]"
          TopLeft="278.2,326.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,106.6"
              Start="0,0"
              End="0,99.1">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,99.1" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Lookup Match Output]"
          TopLeft="321.333330121306,215.700001322428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-46.0333301213059,68.799998677572"
              Start="0,0"
              End="-46.0333301213059,61.299998677572">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.399999338786" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.399999338786"
                    Point2="0,34.399999338786"
                    Point3="-4,34.399999338786" />
                  <mssgle:LineSegment
                    End="-42.0333301213059,34.399999338786" />
                  <mssgle:CubicBezierSegment
                    Point1="-42.0333301213059,34.399999338786"
                    Point2="-46.0333301213059,34.399999338786"
                    Point3="-46.0333301213059,38.399999338786" />
                  <mssgle:LineSegment
                    End="-46.0333301213059,61.299998677572" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-71.208051779403,39.399999338786,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="108,41.6"
          Id="Package\GetOrderDetails\Merge"
          TopLeft="457.499981820584,371.533335434066" />
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Lookup Error Output]"
          TopLeft="355.999996787973,215.700001322428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="155.499985032612,155.833334111638"
              Start="0,0"
              End="155.499985032612,148.333334111638">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.0208336480889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59.0208336480889"
                    Point2="0,63.0208336480889"
                    Point3="4,63.0208336480889" />
                  <mssgle:LineSegment
                    End="151.499985032612,63.0208336480889" />
                  <mssgle:CubicBezierSegment
                    Point1="151.499985032612,63.0208336480889"
                    Point2="155.499985032612,63.0208336480889"
                    Point3="155.499985032612,67.0208336480889" />
                  <mssgle:LineSegment
                    End="155.499985032612,148.333334111638" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="31.8836057975558,68.0208336480889,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrderDetails.Paths[Merge Output 1]"
          TopLeft="528.166648487251,371.533335434066">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="10.8333585990786,-149.933335434066"
              Start="0,0"
              End="10.8333585990786,-142.433335434066">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-71.46011920074" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-71.46011920074"
                    Point2="0,-75.46011920074"
                    Point3="4,-75.46011920074" />
                  <mssgle:LineSegment
                    End="6.83335859907857,-75.46011920074" />
                  <mssgle:CubicBezierSegment
                    Point1="6.83335859907857,-75.46011920074"
                    Point2="10.8333585990786,-75.46011920074"
                    Point3="10.8333585990786,-79.46011920074" />
                  <mssgle:LineSegment
                    End="10.8333585990786,-142.433335434066" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrderDetails\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrderDetails\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\GetOrders">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\GetOrders\Island Trading Orders"
          TopLeft="134.999994635582,13.866666776869" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\GetOrders\Script Component 1"
          TopLeft="616.033324359523,347.95000119845" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\GetOrders\Row Count"
          TopLeft="164.641408070571,116.722223106137" />
        <NodeLayout
          Size="132,41.6"
          Id="Package\GetOrders\Get shipper"
          TopLeft="164.999994635582,204.366667520735" />
        <NodeLayout
          Size="179.2,41.6"
          Id="Package\GetOrders\Flat File Destination 1"
          TopLeft="619.08331661092,484.266669545702" />
        <EdgeLayout
          Id="Package\GetOrders.Paths[Row Count Output 1]"
          TopLeft="230.220701353077,158.322223106137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.044444414598"
              Start="0,0"
              End="0,38.544444414598">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.544444414598" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Output 0]"
          TopLeft="704.958320485222,389.55000119845">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,94.7166683472518"
              Start="0,0"
              End="0,87.2166683472518">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.2166683472518" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Flat File Source Output]"
          TopLeft="227.020701353077,55.466666776869">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.255556329268"
              Start="0,0"
              End="0,53.755556329268">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.755556329268" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\GetOrders\Lookup"
          TopLeft="175.083324756888,350.504665365157" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\GetOrders\Script Component"
          TopLeft="148.749994635582,494.654664042729" />
        <EdgeLayout
          Id="Package\GetOrders.Paths[Lookup Match Output]"
          TopLeft="231.241659696235,245.966667520735">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,104.537997844422"
              Start="0,0"
              End="0,97.0379978444219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.0379978444219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,42.7143114222109,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Lookup Match Output1]"
          TopLeft="230.516659696235,392.104665365157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,102.549998677572"
              Start="0,0"
              End="0,95.0499986775719">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,95.0499986775719" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,41.720311838786,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\GetOrders\Union All"
          TopLeft="448.181818181818,275.454545454545" />
        <EdgeLayout
          Id="Package\GetOrders.Paths[Lookup Error Output]"
          TopLeft="251.666661302249,245.966667520735">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="256.51515687957,29.4878779338104"
              Start="0,0"
              End="256.51515687957,21.9878779338104">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.00704011676114" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.00704011676114"
                    Point2="0,12.0070401167611"
                    Point3="4,12.0070401167611" />
                  <mssgle:LineSegment
                    End="252.51515687957,12.0070401167611" />
                  <mssgle:CubicBezierSegment
                    Point1="252.51515687957,12.0070401167611"
                    Point2="256.51515687957,12.0070401167611"
                    Point3="256.51515687957,16.0070401167611" />
                  <mssgle:LineSegment
                    End="256.51515687957,21.9878779338104" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="82.3911917210348,17.0070401167611,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Lookup Error Output1]"
          TopLeft="248.949991423555,350.504665365157">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="259.231826758263,-33.4501199106114"
              Start="0,0"
              End="259.231826758263,-25.9501199106114">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-9.66074827118676" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-9.66074827118676"
                    Point2="0,-13.6607482711868"
                    Point3="4,-13.6607482711868" />
                  <mssgle:LineSegment
                    End="255.231826758263,-13.6607482711868" />
                  <mssgle:CubicBezierSegment
                    Point1="255.231826758263,-13.6607482711868"
                    Point2="259.231826758263,-13.6607482711868"
                    Point3="259.231826758263,-17.6607482711868" />
                  <mssgle:LineSegment
                    End="259.231826758263,-25.9501199106114" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="83.7495266603817,-8.66074827118676,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Union All Output 1]"
          TopLeft="526.848484848485,317.054545454545">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="174.384839511038,30.8954557439046"
              Start="0,0"
              End="174.384839511038,23.3954557439046">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.60209379027687" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.60209379027687"
                    Point2="0,12.6020937902769"
                    Point3="4,12.6020937902769" />
                  <mssgle:LineSegment
                    End="170.384839511038,12.6020937902769" />
                  <mssgle:CubicBezierSegment
                    Point1="170.384839511038,12.6020937902769"
                    Point2="174.384839511038,12.6020937902769"
                    Point3="174.384839511038,16.6020937902769" />
                  <mssgle:LineSegment
                    End="174.384839511038,23.3954557439046" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="119.2,41.6"
          Id="Package\GetOrders\Multicast"
          TopLeft="169.090909090909,600.727272727273" />
        <EdgeLayout
          Id="Package\GetOrders.Paths[Output 01]"
          TopLeft="229.120451863246,536.254664042729">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64.472608684544"
              Start="0,0"
              End="0,56.972608684544">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.972608684544" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\GetOrders\OLE DB Destination"
          TopLeft="30.9090909090908,693.818181818182" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\GetOrders\OLE DB Destination 1"
          TopLeft="275.454545454545,699.963636363636" />
        <EdgeLayout
          Id="Package\GetOrders.Paths[Multicast Output 1]"
          TopLeft="210.157575757576,642.327272727273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-93.6484848484851,51.4909090909092"
              Start="0,0"
              End="-93.6484848484851,43.9909090909092">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0055629139073" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.0055629139073"
                    Point2="0,21.0055629139073"
                    Point3="-4,21.0055629139073" />
                  <mssgle:LineSegment
                    End="-89.6484848484851,21.0055629139073" />
                  <mssgle:CubicBezierSegment
                    Point1="-89.6484848484851,21.0055629139073"
                    Point2="-93.6484848484851,21.0055629139073"
                    Point3="-93.6484848484851,25.0055629139073" />
                  <mssgle:LineSegment
                    End="-93.6484848484851,43.9909090909092" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\GetOrders.Paths[Multicast Output 3]"
          TopLeft="247.224242424243,642.327272727273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="113.830303030303,57.6363636363634"
              Start="0,0"
              End="113.830303030303,50.1363636363634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5125827814569" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5125827814569"
                    Point2="0,23.5125827814569"
                    Point3="4,23.5125827814569" />
                  <mssgle:LineSegment
                    End="109.830303030303,23.5125827814569" />
                  <mssgle:CubicBezierSegment
                    Point1="109.830303030303,23.5125827814569"
                    Point2="113.830303030303,23.5125827814569"
                    Point3="113.830303030303,27.5125827814569" />
                  <mssgle:LineSegment
                    End="113.830303030303,50.1363636363634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrders\Get shipper">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Shippers]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrders\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrders\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\GetOrders\OLE DB Destination 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>